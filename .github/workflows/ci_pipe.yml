# Comments:
# The ci performs the most common dbt commands to ensure the project changes are working and interpretable with
#  the production brunch
# The following commands:
#      1. dbt deps
#      2. dbt debug
#      3. dbt compile
#      4. dbt run
#      5. dbt test
#      6. dbt clean
# For this ci pipeline  to work effective you will need to set the following parameters in you repo secretes in Git Action
#
#      | Secrete Name        | Values Expected           |
#      |---------------------|---------------------------|
#      | DTB_PROFILE_ACCOUNT | snowflake account id      |
#      | DTB_PROFILE_USER    | Snowflake username        |
#      | DTB_PROFILE_PW      | Snowflake user password   |
#      | DTB_PROFILE_ROLE    | Snowflake user role       |
#      | DTB_PROFILE_DB      | Snowflake database name   |
#      | DTB_PROFILE_SCHEMA  | dbt schema                |
#      | DTB_PROFILE_WH      | Snowflake warehouse name  |

name: Run dbt CI checks
on:
  push:
    branches: [ "feature/*" ]
  pull_request:
    branches: [ "main" ]
env:
  DBT_PROJECT_NAME: jaffle_shop
  DTB_PROFILE_ACCOUNT: ${{ secrets.DTB_PROFILE_ACCOUNT }}
  DTB_PROFILE_USER : ${{ secrets.DTB_PROFILE_USER  }}
  DTB_PROFILE_PW : ${{ secrets.DTB_PROFILE_PW  }}
  DTB_PROFILE_ROLE : ${{ secrets.DTB_PROFILE_ROLE  }}
  DTB_PROFILE_DB : ${{ secrets.DTB_PROFILE_DB  }}
  DTB_PROFILE_SCHEMA : ${{ secrets.DTB_PROFILE_SCHEMA  }}
  DTB_PROFILE_WH  : ${{ secrets.DTB_PROFILE_WH   }}
  DBT_NUM_THREADS: 20
  DBT_QUERY_TAG: dbt_ci_pipe
  
jobs:
    compile:
        name: Build and Compile dbt Project on dbt cloud
        runs-on: ubuntu-latest
        steps:
          - name: Check out the repo hosting the dbt project
            uses: actions/checkout@main
          - name: create string
            run: |
              MY_STRING=$(cat << EOF
              ${{ env.DBT_PROJECT_NAME }}:
                target: dev
                outputs:
                  dev:
                    type: snowflake
                    account: ${{ env.DTB_PROFILE_ACCOUNT }} 
                    client_session_keep_alive: true
                    database: ${{ env.DTB_PROFILE_DB }}
                    password: ${{ env.DTB_PROFILE_PW }}
                    query_tag: ${{ env.DBT_QUERY_TAG }}
                    role: ${{ env.DTB_PROFILE_ROLE }}
                    schema: ${{ env.DTB_PROFILE_SCHEMA }}
                    threads: ${{ env.DBT_NUM_THREADS }}
                    user: ${{ env.DTB_PROFILE_USER }}
                    warehouse: ${{ env.DTB_PROFILE_WH }}
              EOF
              )
              MY_STRING="${MY_STRING//'%'/'%25'}"
              MY_STRING="${MY_STRING//$'\n'/'%0A'}"
              MY_STRING="${MY_STRING//$'\r'/'%0D'}"
              echo "::set-output name=content::$MY_STRING"
            id: my_string
          - name: display string
            run: |
              echo "The string is: ${{ steps.my_string.outputs.content }}"

          - name: Create .dbt directory and profiles.yml 
            run: |
                mkdir -p /home/runner/.dbt
                touch /home/runner/.dbt/profiles.yml
                echo -e "${{ steps.my_string.outputs.content }}" >> /home/runner/.dbt/profiles.yml

          - name: Install dependencies
            run: |
                pip install dbt-snowflake
                dbt deps
          
          - name: Run dbt debug
            run: dbt debug

          - name: Run dbt compile
            run: dbt compile

          - name: Run dbt run
            run: dbt run

          - name: Run dbt test
            run: dbt test 

          - name: Run dbt clean
            run: dbt clean   
